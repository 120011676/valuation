server.port=8080
# server.context-path=/
# spring.main.banner-mode=off
server.sessionTimeout=30
spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/valuation?useSSL=true&createDatabaseIfNotExist=true&useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull&allowMultiQueries=true&k&autoReconnect=true&autoReconnectForPools=true&failOverReadOnly=false
spring.datasource.username=root
spring.datasource.password=root

spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.initialSize=10
spring.datasource.maxActive=20
spring.datasource.maxIdle=8
spring.datasource.minIdle=8
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
#spring.datasource.useGlobalDataSourceStat=true

#http encoding
spring.http.encoding.charset=UTF-8
spring.http.encoding.enabled=true
spring.http.encoding.force=true

#spring.jpa.database=mysql
spring.jpa.hibernate.ddlAuto=update
#spring.jpa.properties.hibernate.hbm2ddl.auto=update
spring.jpa.showSql=true
#spring.jpa.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
# spring.jpa.hibernate.naming.strategy = org.hibernate.cfg.ImprovedNamingStrategy



#spring.jpa.properties.hibernate.show_sql=true
#spring.jpa.properties.entitymanager.packagesToScan=org.say.valuation.entity

# 关闭自动重启
# spring.devtools.restart.enabled=false

# 通过设置spring.devtools.restart.trigger-file属性指定一个文件，当该文件被修改时，则触发自动重启。
#spring.devtools.restart.trigger-file=.reloadtrigger

# 在浏览器方面，DevTools内置了一个LiveReload服务，可以自动刷新浏览器。如果你使用JRebel，则自动重启将会失效，取而代之的是使用动态加载类文件。当然，其他的DevTools（例如LiveReload和属性覆盖）特性还能使用。该特性可以通过spring.devtools.livereload.enabled属性来设置是否开启。
# spring.devtools.livereload.enabled=false

# 远程重启
# spring.devtools.remote.secret=


########################################################
###REDIS (RedisProperties) redis基本配置；
########################################################
# database name
spring.redis.database=0
# server host1
spring.redis.host=127.0.0.1
# server password
#spring.redis.password=
#connection port
spring.redis.port=6379
# pool settings ...
spring.redis.pool.max-idle=8
spring.redis.pool.min-idle=0
spring.redis.pool.max-active=8
spring.redis.pool.max-wait=-1
# name of Redis server
#spring.redis.sentinel.master=
# comma-separated list of host:port pairs
#spring.redis.sentinel.nodes=